/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as UnauthenticatedLoginImport } from './routes/_unauthenticated/login'
import { Route as AuthenticatedHomeImport } from './routes/_authenticated/home'
import { Route as AuthenticatedGeoGeoPromptImport } from './routes/_authenticated/_geo/geo-prompt'
import { Route as AuthenticatedGeoGeoNoSupportImport } from './routes/_authenticated/_geo/geo-no-support'
import { Route as AuthenticatedGeoGeoDeniedImport } from './routes/_authenticated/_geo/geo-denied'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UnauthenticatedLoginRoute = UnauthenticatedLoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedHomeRoute = AuthenticatedHomeImport.update({
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedGeoGeoPromptRoute = AuthenticatedGeoGeoPromptImport.update({
  path: '/geo-prompt',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedGeoGeoNoSupportRoute =
  AuthenticatedGeoGeoNoSupportImport.update({
    path: '/geo-no-support',
    getParentRoute: () => rootRoute,
  } as any)

const AuthenticatedGeoGeoDeniedRoute = AuthenticatedGeoGeoDeniedImport.update({
  path: '/geo-denied',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/home': {
      id: '/_authenticated/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthenticatedHomeImport
      parentRoute: typeof rootRoute
    }
    '/_unauthenticated/login': {
      id: '/_unauthenticated/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof UnauthenticatedLoginImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_geo/geo-denied': {
      id: '/_authenticated/_geo/geo-denied'
      path: '/geo-denied'
      fullPath: '/geo-denied'
      preLoaderRoute: typeof AuthenticatedGeoGeoDeniedImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_geo/geo-no-support': {
      id: '/_authenticated/_geo/geo-no-support'
      path: '/geo-no-support'
      fullPath: '/geo-no-support'
      preLoaderRoute: typeof AuthenticatedGeoGeoNoSupportImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_geo/geo-prompt': {
      id: '/_authenticated/_geo/geo-prompt'
      path: '/geo-prompt'
      fullPath: '/geo-prompt'
      preLoaderRoute: typeof AuthenticatedGeoGeoPromptImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/home': typeof AuthenticatedHomeRoute
  '/login': typeof UnauthenticatedLoginRoute
  '/geo-denied': typeof AuthenticatedGeoGeoDeniedRoute
  '/geo-no-support': typeof AuthenticatedGeoGeoNoSupportRoute
  '/geo-prompt': typeof AuthenticatedGeoGeoPromptRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/home': typeof AuthenticatedHomeRoute
  '/login': typeof UnauthenticatedLoginRoute
  '/geo-denied': typeof AuthenticatedGeoGeoDeniedRoute
  '/geo-no-support': typeof AuthenticatedGeoGeoNoSupportRoute
  '/geo-prompt': typeof AuthenticatedGeoGeoPromptRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated/home': typeof AuthenticatedHomeRoute
  '/_unauthenticated/login': typeof UnauthenticatedLoginRoute
  '/_authenticated/_geo/geo-denied': typeof AuthenticatedGeoGeoDeniedRoute
  '/_authenticated/_geo/geo-no-support': typeof AuthenticatedGeoGeoNoSupportRoute
  '/_authenticated/_geo/geo-prompt': typeof AuthenticatedGeoGeoPromptRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/home'
    | '/login'
    | '/geo-denied'
    | '/geo-no-support'
    | '/geo-prompt'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/home'
    | '/login'
    | '/geo-denied'
    | '/geo-no-support'
    | '/geo-prompt'
  id:
    | '__root__'
    | '/'
    | '/_authenticated/home'
    | '/_unauthenticated/login'
    | '/_authenticated/_geo/geo-denied'
    | '/_authenticated/_geo/geo-no-support'
    | '/_authenticated/_geo/geo-prompt'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedHomeRoute: typeof AuthenticatedHomeRoute
  UnauthenticatedLoginRoute: typeof UnauthenticatedLoginRoute
  AuthenticatedGeoGeoDeniedRoute: typeof AuthenticatedGeoGeoDeniedRoute
  AuthenticatedGeoGeoNoSupportRoute: typeof AuthenticatedGeoGeoNoSupportRoute
  AuthenticatedGeoGeoPromptRoute: typeof AuthenticatedGeoGeoPromptRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedHomeRoute: AuthenticatedHomeRoute,
  UnauthenticatedLoginRoute: UnauthenticatedLoginRoute,
  AuthenticatedGeoGeoDeniedRoute: AuthenticatedGeoGeoDeniedRoute,
  AuthenticatedGeoGeoNoSupportRoute: AuthenticatedGeoGeoNoSupportRoute,
  AuthenticatedGeoGeoPromptRoute: AuthenticatedGeoGeoPromptRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated/home",
        "/_unauthenticated/login",
        "/_authenticated/_geo/geo-denied",
        "/_authenticated/_geo/geo-no-support",
        "/_authenticated/_geo/geo-prompt"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated/home": {
      "filePath": "_authenticated/home.tsx"
    },
    "/_unauthenticated/login": {
      "filePath": "_unauthenticated/login.tsx"
    },
    "/_authenticated/_geo/geo-denied": {
      "filePath": "_authenticated/_geo/geo-denied.tsx"
    },
    "/_authenticated/_geo/geo-no-support": {
      "filePath": "_authenticated/_geo/geo-no-support.tsx"
    },
    "/_authenticated/_geo/geo-prompt": {
      "filePath": "_authenticated/_geo/geo-prompt.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
